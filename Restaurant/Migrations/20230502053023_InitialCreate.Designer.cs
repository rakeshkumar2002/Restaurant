// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Models;

#nullable disable

namespace Restaurant.Migrations
{
    [DbContext(typeof(restaurantContext))]
    [Migration("20230502053023_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Restaurant.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Restaurant.Models.CategoryDish", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<int>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    b.HasKey("CategoryId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("Category_Dish", (string)null);
                });

            modelBuilder.Entity("Restaurant.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int")
                        .HasColumnName("DishID");

                    b.Property<string>("DishDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DishImage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DishName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("DishPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Nature")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DishId");

                    b.ToTable("Dish", (string)null);
                });

            modelBuilder.Entity("Restaurant.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<string>("MenuDescription")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MenuImage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("MenuName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("MenuId");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Restaurant.Models.MenuCategory", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId1")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MenuId1");

                    b.ToTable("Menu_Category", (string)null);
                });

            modelBuilder.Entity("Restaurant.Models.CategoryDish", b =>
                {
                    b.HasOne("Restaurant.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Category___Categ__656C112C");

                    b.HasOne("Restaurant.Models.Dish", "Dish")
                        .WithMany()
                        .HasForeignKey("DishId")
                        .IsRequired()
                        .HasConstraintName("FK__Category___DishI__66603565");

                    b.Navigation("Category");

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("Restaurant.Models.MenuCategory", b =>
                {
                    b.HasOne("Restaurant.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Menu_Cate__Categ__5EBF139D");

                    b.HasOne("Restaurant.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__Menu_Cate__MenuI__5DCAEF64");

                    b.HasOne("Restaurant.Models.Menu", null)
                        .WithMany("MenuCategories")
                        .HasForeignKey("MenuId1");

                    b.Navigation("Category");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Restaurant.Models.Menu", b =>
                {
                    b.Navigation("MenuCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
